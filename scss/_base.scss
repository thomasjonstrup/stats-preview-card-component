@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Lexend+Deca&display=swap");

$font-family: "Inter", sans-serif; // 400, 700
$font-family-secondary: "Lexend Deca", sans-serif; // 400

//font-family: 'Big Shoulders Display', cursive;
//font-family: 'Lexend Deca', sans-serif;

// colors

$very-dark-blue: hsl(233, 47%, 7%); // (main background);
$dark-desaturated-blue: hsl(244, 38%, 16%); // (card background);
$soft-violet: hsl(277, 64%, 61%); // (accent);

$white: hsl(0, 0%, 100%); //(main heading, stats)
$slightly-transparent-white: hsla(0, 0%, 100%, 0.75); //(main paragraph)
$slightly-transparent-white-stat: hsla(0, 0%, 100%, 0.6); //(stat headings)

$primary-color: hsl(223, 87%, 63%);
$secondary-paleblue-color: hsl(223, 100%, 88%);
$secondary-lightred-color: hsl(354, 100%, 66%);
$neutral-gray-color: hsl(0, 0%, 59%);
$neutral-verydarkblue-color: hsl(209, 33%, 12%);

$secondary-color: #1c3fa8;
$dark-color: #002240;
$light-color: #f4f4f4;
$success-color: #5cb85c;
$error-color: #d9534f;

$very-dark-grayish-blue: hsl(217, 19%, 35%);
$very-dark-blackish-blue: hsl(219, 29%, 14%);
$light-gray: hsl(0, 0%, 81%);
$light-grayish-blue: hsl(210, 46%, 95%);

$assetPath: "../images";

// Reset

*,
*:before,
*:after {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

html {
	font-size: 62.5%; // 1rem = 10px
}

body {
	font-size: 1.5rem;
	font-family: $font-family;
	color: $white;
	background-color: $very-dark-blue;
	font-weight: 400;
	line-height: 1.6;
	min-height: 100vh;
	text-align: center;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.header {
	display: flex;
	justify-content: center;
	margin-top: 2rem;
	padding-bottom: 2rem;

	&__logo {
		width: 8.6rem;
		height: auto;
	}
}

ul {
	list-style: none;
}

a {
	text-decoration: none;
	color: #333;
}

h1,
h2 {
	font-weight: 300;
	line-height: 1.2;
	margin: 10px 0;
}

p {
	margin: 10px 0;
}

img {
	width: 100%;
}

$breakpoints-up: (
	"md": "750px",
	"ld": "1024px",
	"xd": "1376px",
);

$breakpoints-down: (
	"md": "750px",
	"ld": "1024px",
	"xd": "1376px",
);

@mixin breakpoint-up($size) {
	@media screen and (min-width: map-get($breakpoints-up, $size)) {
		@content;
	}
}
@mixin breakpoint-down($size) {
	@media screen and (max-width: map-get($breakpoints-down, $size)) {
		@content;
	}
}

@function calculateRem($size) {
	$remSize: $size / 16px;
	@return #{$remSize}rem;
}

// 640px, 1024px, 1400px
$breakpoints-up: (
	/* 	"medium": "40em",
	"large": "64em",
	"xlarge": "87.5em", */ "medium": "640px",
	"large": "1024px",
	"xlarge": "1400px"
);

// 639px, 1023px, 1399px
$breakpoints-down: (
	/* 	"small": "39.9375em",
	"medium": "63.9375em",
	"large": "87.4375em", */
		"small": "639px",
	"medium": "1023px",
	"large": "1399px"
);

@mixin breakpoint-up($size) {
	@media (min-width: map-get($breakpoints-up, $size)) {
		@content;
	}
}

@mixin breakpoint-down($size) {
	@media (max-width: map-get($breakpoints-down, $size)) {
		@content;
	}
}

// Visibility
.hide-for-mobile {
	@include breakpoint-down(small) {
		display: none;
	}
}

.hide-for-desktop {
	@include breakpoint-up(medium) {
		display: none;
	}
}

/* Utilities */
.container {
	max-width: 110rem;
	margin: 0 auto;
	/* 	overflow: auto; */
	padding: 0 4rem;
}

/* Backgounds & colored buttons */
.bg-primary,
.btn-primary {
	background-color: $primary-color;
	color: #fff;
}

.bg-secondary,
.btn-secondary {
	background-color: $secondary-color;
	color: #fff;
}

.bg-dark,
.btn-dark {
	background-color: $dark-color;
	color: #fff;
}

.bg-light,
.btn-light {
	background-color: $light-color;
	color: #333;
}

.bg-primary,
.btn-primary,
.bg-secondary,
.btn-secondary,
.bg-dark,
.btn-dark {
	a {
		color: #fff;
	}
}

/* Text sizes */
.lead {
	font-size: 20px;
}

.sm {
	font-size: 1rem;
}

.lead {
	font-size: 2rem;
}

.lg {
	font-size: 3rem;
}

.xl {
	font-size: 4rem;
}

.text-center {
	text-align: center;
}

.flex {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100%;
}

// Mixins
$max: 20;
$offset: 1;
$unit: "rem";

@mixin generate-styling($className, $styleName) {
	$i: 0;
	@while $i <= $max {
		#{$className + $i} {
			#{$styleName}: #{$i + $unit};
		}
		$i: $i + $offset;
	}
}

// Flexbox mixins
@mixin flexbox {
	display: flex;
}

@mixin inline-flex {
	display: inline-flex;
}

// flex shorthand
// applites to: flex items
// positive number, intial, auto or none
@mixin flex($fg: 1, $fs: 0, $fb: auto) {
	// set a variable to be used by box-flex properties
	$fg-boxflex: $fg;

	// Box-Flex only supports a flex-grow value so lets grab the
	// first item in the list and just return that.
	@if type-of($fg) == "list" {
		$fg-boxflex: nth($fg, 1);
	}

	flex: $fg $fs $fb;
}

// Flex direction
// row (default) | row-reverse | column | column-reverse
@mixin flex-direction($direction: row) {
	flex-direction: $direction;
}

// Margins
@include generate-styling(".m-t-", "margin-top");
@include generate-styling(".m-r-", "margin-right");
@include generate-styling(".m-b-", "margin-bottom");
@include generate-styling(".m-l-", "margin-left");
@include generate-styling(".m-x-", "margin");
// Paddings
@include generate-styling(".p-t-", "padding-top");
@include generate-styling(".p-r-", "padding-right");
@include generate-styling(".p-b-", "padding-bottom");
@include generate-styling(".p-l-", "padding-left");
@include generate-styling(".p-x-", "padding");

/* Margin */
.my {
	&-1 {
		margin: 1rem 0;
	}
	&-2 {
		margin: 1.5rem 0;
	}
	&-3 {
		margin: 2rem 0;
	}
	&-4 {
		margin: 3rem 0;
	}
	&-5 {
		margin: 4rem 0;
	}
}

.m {
	&-1 {
		margin: 1rem;
	}
	&-2 {
		margin: 1.5rem;
	}
	&-3 {
		margin: 2rem;
	}
	&-4 {
		margin: 3rem;
	}
	&-5 {
		margin: 4rem;
	}
}

/* Padding */
.py {
	&-1 {
		padding: 1rem 0;
	}
	&-2 {
		padding: 1.5rem 0;
	}
	&-3 {
		padding: 2rem 0;
	}
	&-4 {
		padding: 3rem 0;
	}
	&-5 {
		padding: 4rem 0;
	}
}

.p {
	&-1 {
		padding: 1rem;
	}
	&-2 {
		padding: 1.5rem;
	}
	&-3 {
		padding: 2rem;
	}
	&-4 {
		padding: 3rem;
	}
	&-5 {
		padding: 4rem;
	}
}

.illustration {
	display: flex;
	align-items: center;
	justify-content: center;
	&__image {
		max-width: 60rem;
	}
}

.heading {
	font-weight: 300;
	font-size: 2.2rem;
	margin-bottom: 1.5rem;
	color: $neutral-gray-color;
	span {
		font-weight: bold;
		color: $neutral-verydarkblue-color;
	}

	@include breakpoint-up(medium) {
		font-size: 3rem;
	}
}
